name: Deployment

on:
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint checks
        run: npm run lint
        
      # Add test step if you have tests
      # - name: Run tests
      #   run: npm test

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Needed for package.json diff check

      - name: Check for package file changes
        id: check_changes
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "package.*\.json"; then
            echo "package_changes=true" >> $GITHUB_OUTPUT
          else
            echo "package_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e  # Exit on any error
            
            # Load NVM and set Node version
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 20.14.0 || nvm install 20.14.0
            
            # Navigate to project directory
            cd agentic-placeholder-be
            
            # Backup current version (optional)
            # cp .env .env.backup || true
            
            # Update code
            git fetch origin main
            git reset --hard origin/main
            
            # Install dependencies only if package files changed
            if [[ "${{ steps.check_changes.outputs.package_changes }}" == "true" ]]; then
              echo "Package files changed, installing dependencies..."
              npm ci --production
            fi
            
            # Build application
            npm run build
            
            # PM2 process management
            if pm2 list | grep -q "agentic-placeholder-be"; then
              pm2 reload agentic-placeholder-be --update-env
            else
              npm run pm2:start
            fi
            
            # Save PM2 process list
            pm2 save
            
            # Verify deployment
            echo "Deployment completed. Current commit:"
            git log -1 --oneline
            echo "PM2 status:"
            pm2 list
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}